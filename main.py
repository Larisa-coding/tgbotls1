import asyncio
import random
import aiohttp
import os
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from gtts import gTTS
from googletrans import Translator
from config import TOKEN, WEATHER_API_KEY

translator = Translator(timeout=10)
bot = Bot(token=TOKEN)
dp = Dispatcher()

os.makedirs("tmp", exist_ok=True)
os.makedirs("img", exist_ok=True)

@dp.message(Command('video'))
async def video(message: Message):
    try:
        await bot.send_chat_action(message.chat.id, 'upload_video')
        video = FSInputFile('video.mp4')
        await bot.send_video(message.chat.id, video)
    except FileNotFoundError:
        await message.answer("–í–∏–¥–µ–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {str(e)}")

@dp.message(Command('voice'))
async def voice(message: Message):
    try:
        voice_file = FSInputFile("sample.ogg")
        await message.answer_voice(voice_file)
    except FileNotFoundError:
        await message.answer("–ì–æ–ª–æ—Å–æ–≤–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")

@dp.message(Command('audio'))
async def audio(message: Message):
    try:
        audio_file = FSInputFile('sound2.mp3')
        await bot.send_audio(message.chat.id, audio_file)
    except FileNotFoundError:
        await message.answer("–ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")

@dp.message(Command('training'))
async def training(message: Message):
    training_list = [
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 1:\n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n2. –í–µ–ª–æ—Å–∏–ø–µ–¥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)\n3. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30 —Å–µ–∫—É–Ω–¥",
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 2:\n1. –ü–æ–¥—ä–µ–º—ã –Ω–æ–≥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n2. –†—É—Å—Å–∫–∏–π —Ç–≤–∏—Å—Ç: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)\n3. –ü–ª–∞–Ω–∫–∞ —Å –ø–æ–¥–Ω—è—Ç–æ–π –Ω–æ–≥–æ–π: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è –Ω–æ–≥–∞)",
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 3:\n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è —Å –ø–æ–¥–Ω—è—Ç—ã–º–∏ –Ω–æ–≥–∞–º–∏: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n2. –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü—ã: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n3. –ë–æ–∫–æ–≤–∞—è –ø–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)"
    ]

    rand_tr = random.choice(training_list)
    await message.answer(f"üèãÔ∏è –í–∞—à–∞ –º–∏–Ω–∏-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n{rand_tr}")

    try:
        tts = gTTS(text=rand_tr, lang='ru')
        filename = "tmp/training.ogg"
        tts.save(filename)
        await bot.send_chat_action(message.chat.id, 'upload_voice')
        await bot.send_voice(chat_id=message.chat.id, voice=FSInputFile(filename))
        os.remove(filename)
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {str(e)}")

@dp.message(Command('help'))
async def help_command(message: Message):
    help_text = (
        "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n"
        "/help - –ü–æ–º–æ—â—å\n"
        "/photo - –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ\n"
        "/weather [–≥–æ—Ä–æ–¥] - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n"
        "/training - –ü–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å –æ–∑–≤—É—á–∫–æ–π\n"
        "/voice - –ü–æ–ª—É—á–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/doc - –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç\n"
        "/video - –ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ\n"
        "/audio - –ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ—Ñ–∞–π–ª\n"
    )
    await message.answer(help_text)

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, {message.from_user.first_name}! ‚ú®')

async def main():
    await dp.start_polling(bot)

@dp.message(Command('doc'))
async def doc(message: Message):
    try:
        document = FSInputFile("Krug.pdf")
        await bot.send_document(message.chat.id, document)
    except FileNotFoundError:
        await message.answer("–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")

async def get_weather(city: str) -> str:
    base_url = "http://api.openweathermap.org/data/2.5/weather"
    params = {
        "q": city,
        "appid": WEATHER_API_KEY,
        "units": "metric",
        "lang": "ru"
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(base_url, params=params) as response:
            if response.status != 200:
                return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå"

            data = await response.json()
            weather = data["weather"][0]["description"].capitalize()
            temp = data["main"]["temp"]
            humidity = data["main"]["humidity"]
            wind = data["wind"]["speed"]

            return (
                f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                f"‚ûñ –°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather}\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"üå™ –í–µ—Ç–µ—Ä: {wind} –º/—Å"
            )

@dp.message(Command("weather"))
async def weather_command(message: Message):
    try:
        city = message.text.split(maxsplit=1)[1]
        weather = await get_weather(city)
        await message.answer(weather)
    except IndexError:
        await message.answer("–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /weather.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")

@dp.message(Command('photo'))
async def photo(message: Message):
    image_links = [
        'https://i.pinimg.com/236x/c8/cc/24/c8cc24bba37a25c009647b8875aae0e3.jpg',
        'https://img.freepik.com/free-photo/nature-animals_1122-1999.jpg',
        'https://img.freepik.com/free-photo/cute-cat-spending-time-indoors_23-2150649172.jpg'
    ]
    rand_photo = random.choice(image_links)
    await message.answer_photo(photo=rand_photo, caption='–≠—Ç–æ —Å—É–ø–µ—Ä –∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')

@dp.message(F.photo)
async def react_photo(message: Message):
    responses = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(responses)
    await message.answer(rand_answ)
    await message.photo[-1].download(destination=f'img/{message.photo[-1].file_id}.jpg')

@dp.message(F.text)
async def translate_text(message: Message):
    try:
        translated = await translator.translate(message.text, dest='en')
        await message.answer(f"–ü–µ—Ä–µ–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {translated.text}")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞: {str(e)}")

@dp.message(F.text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
    await message.answer(
        '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–µ—Ä–æ–≥–∞—Ç–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫–∞; –Ω–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.'
    )

if __name__ == "__main__":
    asyncio.run(main())
